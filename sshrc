#!/bin/bash
set -euo pipefail

function _remote() {
  PATH="${SSHHOME}:${PATH}" exec bash --rcfile <(echo '
    for f in /etc/bash.bashrc "${HOME}/.bashrc"; do
      if [[ -f "$f" ]]; then
        source "$f"
      fi
    done
    source "${SSHHOME}/.sshrc"
  ') "$@"
}

function _local() {
  local self=$(readlink "$0")
  local home=${SSHHOME:-$HOME}
  if [[ ! -f "${home}/.sshrc" ]]; then
    exec echo "No such file: ${home}/.sshrc" >&2
  fi

  local sshrcdir=""
  if [[ -d "${home}/.sshrc.d" ]] ; then
    local sshrcdir='.sshrc.d'
  fi

  local files=$(tar -b1 -chC "${home}" .sshrc ${sshrcdir} | bzip2 | base64)
  local ssh_command='
    export SSHHOME=$(mktemp -d)
    export SSHRCCLEANUP=${SSHHOME}
    echo "'"${files}"'" | base64 -d | tar -mxjC "${SSHHOME}"
    echo "'"$(bzip2 <"${self}" | base64)"'" | base64 -d | bzip2 -d > "${SSHHOME}/bashsshrc"
    /bin/bash "${SSHHOME}/bashsshrc"
    rm -rf "${SSHRCCLEANUP}"'
  ssh -t "$@" "${ssh_command}"
}

main() {
  if [[ "$(basename "$0")" = 'bashsshrc' ]]; then
    _remote "$@"
  elif [[ -n "$1" ]]; then
    _local "$@"
  else
    ssh
  fi
}
main "$@"
